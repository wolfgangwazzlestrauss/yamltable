name: build
on:
  push:
    branches:
      - develop
      - feature/*
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Code repository checkout
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install Node dependencies
        run: |
          npm install
      - name: Check format of configuration files
        run: |
          npm run lint
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Build and static test Python code
        run: |
          tox -e lint
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Code repository checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Build and test with tox
        run: |
          tox -e py
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Code repository checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install -v
      - name: Build, test, and upload benchmark report
        run: |
          poetry run pytest --benchmark-json benchmark.json
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: benchmark
          path: benchmark.json
          retention-days: 30
  report:
    runs-on: ubuntu-latest
    steps:
      - name: Code repository checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install -v
      - name: Build, test, and upload coverage report
        run: |
          poetry run pytest --cov --cov-fail-under=0 --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
